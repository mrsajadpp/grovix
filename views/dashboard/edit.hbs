{{>headers/new}}


<!-- Writing Area -->
<div class="container">
    <form action="/article/update/{{article._id}}"  method="post" class="regForm" enctype="multipart/form-data">
        <div class="inputBox">
            <input type="text" name="title" id="title" value="{{article.title}}" placeholder="Article Title*" required>
        </div>
        <div class="inputBox">
            <input type="text" name="description" value="{{article.description}}" id="description" maxlength="150"
                required placeholder="Article Description*">
        </div>

        <div class="inputBox">
            <input type="text" name="category" value="{{article.category}}" id="customCategory"
                placeholder="Custom Category*">
        </div>

        <input type="file" name="thumbnail" hidden accept="image/jpg, image/jpeg, image/png" id="profileInp">
        <div id="inputProfile" class="inputProfile" style="background-image: url('/img/article/{{article._id}}.jpg');">
            <button type="button">
                <svg viewBox="0 0 24 24" preserveAspectRatio="xMidYMid meet" focusable="false"
                    class="style-scope tp-yt-iron-icon"
                    style="pointer-events: none; display: block; width: 34px; height: 34px; fill: #fff;">
                    <g width="24" height="24" viewBox="0 0 24 24" class="style-scope tp-yt-iron-icon">
                        <path
                            d="M14.06 7.6L16.4 9.94L6.34 20H4V17.66L14.06 7.6ZM14.06 6.19L3 17.25V21H6.75L17.81 9.94L14.06 6.19ZM17.61 4.05L19.98 6.42L18.84 7.56L16.47 5.19L17.61 4.05ZM17.61 2.63L15.06 5.18L18.85 8.97001L21.4 6.42L17.61 2.63Z"
                            class="style-scope tp-yt-iron-icon"></path>
                    </g>
                </svg>
            </button>
        </div>

        <div class="inputText">
            <span class="textMsg">The thumbnail image should have dimensions of <span
                    style="color: #0078e8;">1920x1080</span>
                pixels.</span>
        </div>

        <div class="textBox">
            <div id="toolbar">
                <button type="button" class="toolbar-button" onclick="execCmd('bold')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path
                            d="M17.061 11.22A4.46 4.46 0 0 0 18 8.5C18 6.019 15.981 4 13.5 4H6v15h8c2.481 0 4.5-2.019 4.5-4.5a4.48 4.48 0 0 0-1.439-3.28zM13.5 7c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5H9V7h4.5zm.5 9H9v-3h5c.827 0 1.5.673 1.5 1.5S14.827 16 14 16z">
                        </path>
                    </svg>
                </button>
                <button type="button" class="toolbar-button" onclick="execCmd('italic')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path d="M19 7V4H9v3h2.868L9.012 17H5v3h10v-3h-2.868l2.856-10z"></path>
                    </svg>
                </button>
                <button type="button" class="toolbar-button" onclick="execCmd('underline')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path
                            d="M5 18h14v2H5zM6 4v6c0 3.309 2.691 6 6 6s6-2.691 6-6V4h-2v6c0 2.206-1.794 4-4 4s-4-1.794-4-4V4H6z">
                        </path>
                    </svg>
                </button>
                <button type="button" class="toolbar-button"
                    onclick="execCmd('createLink', prompt('Enter the link URL:'))">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path
                            d="M4.222 19.778a4.983 4.983 0 0 0 3.535 1.462 4.986 4.986 0 0 0 3.536-1.462l2.828-2.829-1.414-1.414-2.828 2.829a3.007 3.007 0 0 1-4.243 0 3.005 3.005 0 0 1 0-4.243l2.829-2.828-1.414-1.414-2.829 2.828a5.006 5.006 0 0 0 0 7.071zm15.556-8.485a5.008 5.008 0 0 0 0-7.071 5.006 5.006 0 0 0-7.071 0L9.879 7.051l1.414 1.414 2.828-2.829a3.007 3.007 0 0 1 4.243 0 3.005 3.005 0 0 1 0 4.243l-2.829 2.828 1.414 1.414 2.829-2.828z">
                        </path>
                        <path d="m8.464 16.95-1.415-1.414 8.487-8.486 1.414 1.415z"></path>
                    </svg>
                </button>
                <button type="button" class="toolbar-button" onclick="execCmd('insertUnorderedList')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path d="M4 6h2v2H4zm0 5h2v2H4zm0 5h2v2H4zm16-8V6H8.023v2H18.8zM8 11h12v2H8zm0 5h12v2H8z">
                        </path>
                    </svg>
                </button>
                <button type="button" class="toolbar-button" onclick="execCmd('insertOrderedList')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path
                            d="M5.282 12.064c-.428.328-.72.609-.875.851-.155.24-.249.498-.279.768h2.679v-.748H5.413c.081-.081.152-.151.212-.201.062-.05.182-.142.361-.27.303-.218.511-.42.626-.604.116-.186.173-.375.173-.578a.898.898 0 0 0-.151-.512.892.892 0 0 0-.412-.341c-.174-.076-.419-.111-.733-.111-.3 0-.537.038-.706.114a.889.889 0 0 0-.396.338c-.094.143-.159.346-.194.604l.894.076c.025-.188.074-.317.147-.394a.375.375 0 0 1 .279-.108c.11 0 .2.035.272.108a.344.344 0 0 1 .108.258.55.55 0 0 1-.108.297c-.074.102-.241.254-.503.453zm.055 6.386a.398.398 0 0 1-.282-.105c-.074-.07-.128-.195-.162-.378L4 18.085c.059.204.142.372.251.506.109.133.248.235.417.306.168.069.399.103.692.103.3 0 .541-.047.725-.14a1 1 0 0 0 .424-.403c.098-.175.146-.354.146-.544a.823.823 0 0 0-.088-.393.708.708 0 0 0-.249-.261 1.015 1.015 0 0 0-.286-.11.943.943 0 0 0 .345-.299.673.673 0 0 0 .113-.383.747.747 0 0 0-.281-.596c-.187-.159-.49-.238-.909-.238-.365 0-.648.072-.847.219-.2.143-.334.353-.404.626l.844.151c.023-.162.067-.274.133-.338s.151-.098.257-.098a.33.33 0 0 1 .241.089c.059.06.087.139.087.238 0 .104-.038.193-.117.27s-.177.112-.293.112a.907.907 0 0 1-.116-.011l-.045.649a1.13 1.13 0 0 1 .289-.056c.132 0 .237.041.313.126.077.082.115.199.115.352 0 .146-.04.266-.119.354a.394.394 0 0 1-.301.134zm.948-10.083V5h-.739a1.47 1.47 0 0 1-.394.523c-.168.142-.404.262-.708.365v.754a2.595 2.595 0 0 0 .937-.48v2.206h.904zM9 6h11v2H9zm0 5h11v2H9zm0 5h11v2H9z">
                        </path>
                    </svg>
                </button>
                <button type="button" class="toolbar-button" onclick="openImageDialog()">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path d="M4 5h13v7h2V5c0-1.103-.897-2-2-2H4c-1.103 0-2 .897-2 2v12c0 1.103.897 2 2 2h8v-2H4V5z">
                        </path>
                        <path d="m8 11-3 4h11l-4-6-3 4z"></path>
                        <path d="M19 14h-2v3h-3v2h3v3h2v-3h3v-2h-3z"></path>
                    </svg>
                </button>
                <select class="toolbar-button" onchange="execCmd('formatBlock', this.value)">
                    <option value="<h1>">Major Heading</option>
                    <option value="<h2>">Heading</option>
                    <option value="<h3>">Main Heading</option>
                    <option value="<h4>">Sub Heading</option>
                    <option value="<p>">Paragraph</option>
                </select>
                <button type="button" class="toolbar-button" onclick="toggleEditorMode()">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                        style="fill: rgba(0, 0, 0, 1);">
                        <path
                            d="M8.293 6.293 2.586 12l5.707 5.707 1.414-1.414L5.414 12l4.293-4.293zm7.414 11.414L21.414 12l-5.707-5.707-1.414 1.414L18.586 12l-4.293 4.293z">
                        </path>
                    </svg>
                </button>
            </div>
            <div id="editor" contenteditable="true">{{{article.body}}}</div>
            <textarea name="content" id="content" hidden>{{article.body}}</textarea>
            <textarea id="htmlEditor" style="display: none; width: 100%; height: 300px;">{{article.body}}</textarea>
        </div>

        <!-- <div class="inputBox">
                <input type="text" name="last_name" id="last_name" placeholder="Last Name">
            </div>
            <div class="inputBox">
                <input type="email" name="email" id="email" placeholder="Email">
            </div>
            <div class="inputBox">
                <input type="tel" name="phone" id="phone" placeholder="Phone">
            </div>
            <div class="inputBox">
                <input type="password" placeholder="Password" name="password" id="password">
            </div> -->
        <!-- <div class="inputText">
                <input type="checkbox" name="terms_accept" id="terms">
                <span>
                    By using our services, you are accepting our <a href="terms-and-conditions.html"
                        target="_blank">terms and conditions</a>.
                </span>
            </div> -->
        <div class="inputText">
            <span class="textMsg" style="color: red;">
                If the request button is still disabled, please ensure all fields are correctly filled. If it
                remains disabled, try editing your title to trigger the validation.
            </span>
        </div>
        <div class="inputBox">
            <button type="submit" class="regButton">
                Request
            </button>
        </div>
        <!-- <div class="inputText">
                <span>Do you have a account? <a href="./login.html">LogIn</a>.</span>
            </div> -->
    </form>
</div>

<!-- Image upload and URL dialog -->
<div id="imageDialog" class="dialog" style="display: none;">
    <div class="dialog-content">
        <span class="close" onclick="closeImageDialog()">&times;</span>
        <h2>Add Image</h2>
        <div>
            <button onclick="document.getElementById('imageUpload').click()">Upload Image from Computer</button>
            <input type="file" id="imageUpload" style="display: none;" accept="image/*" onchange="uploadImage(event)">
        </div>
        <div>
            <label for="imageUrl">Image URL:</label>
            <input type="text" id="imageUrl" placeholder="Enter image URL">
            <button onclick="insertImageFromUrl()">Insert Image</button>
        </div>
    </div>
</div>


<br><br>

<!-- Scripts -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const inputProfileDiv = document.getElementById('inputProfile');
        const fileInput = document.getElementById('profileInp');
        const saveButton = document.querySelector('.regButton');
        const errorMsg = document.querySelector('.textMsg');
        const title = document.getElementById('title');
        const category = document.getElementById('category');
        const content = document.getElementById('content');
        const customCategory = document.getElementById('customCategory');
        const customCatBox = document.querySelector('.customCategory');
        const editor = document.getElementById('editor');
        const htmlEditor = document.getElementById('htmlEditor');

        fileInput.addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (!file) return;

            const img = new Image();
            const reader = new FileReader();

            reader.onload = function (e) {
                img.src = e.target.result;
                img.onload = function () {
                    const width = img.naturalWidth;
                    const height = img.naturalHeight;

                    if (width !== 1920 || height !== 1080) {
                        errorMsg.style.color = 'red';
                        errorMsg.textContent = 'Image dimensions must be 1920x1080';
                    } else {
                        errorMsg.style.color = 'green';
                        errorMsg.textContent = 'Image dimensions are correct';
                    }

                    inputProfileDiv.style.backgroundImage = `url(${e.target.result})`;
                };
            };

            reader.readAsDataURL(file);
        });

        inputProfileDiv.addEventListener('click', function () {
            fileInput.click();
        });

        // Event listener to handle clicks on images within the editor
        editor.addEventListener('click', function (event) {
            if (event.target.tagName === 'IMG') {
                const altText = prompt('Enter alt text:', event.target.alt);
                const titleText = prompt('Enter title text:', event.target.title);
                if (altText !== null) event.target.alt = altText;
                if (titleText !== null) event.target.title = titleText;
            }
        });

        // Synchronize the content of the editor with the hidden textarea
        const form = document.querySelector('form');
        form.addEventListener('submit', function () {
            if (editor.style.display !== 'none') {
                content.value = editor.innerHTML;
            } else {
                content.value = htmlEditor.value;
            }
        });
    });

    function execCmd(command, value = null) {
        const editor = document.getElementById('editor');
        const htmlEditor = document.getElementById('htmlEditor');

        if (editor.style.display !== 'none') {
            document.execCommand(command, false, value);
        } else {
            const start = htmlEditor.selectionStart;
            const end = htmlEditor.selectionEnd;
            const selectedText = htmlEditor.value.substring(start, end);
            const beforeText = htmlEditor.value.substring(0, start);
            const afterText = htmlEditor.value.substring(end);

            let newText;
            switch (command) {
                case 'bold':
                    newText = `<b>${selectedText}</b>`;
                    break;
                case 'italic':
                    newText = `<i>${selectedText}</i>`;
                    break;
                case 'underline':
                    newText = `<u>${selectedText}</u>`;
                    break;
                case 'createLink':
                    newText = `<a href="${value}">${selectedText}</a>`;
                    break;
                case 'insertUnorderedList':
                    newText = `<ul><li>${selectedText}</li></ul>`;
                    break;
                case 'insertOrderedList':
                    newText = `<ol><li>${selectedText}</li></ol>`;
                    break;
                case 'formatBlock':
                    newText = `<${value}>${selectedText}</${value}>`;
                    break;
                default:
                    newText = selectedText;
            }

            htmlEditor.value = beforeText + newText + afterText;
        }
    }

    function openImageDialog() {
        document.getElementById('imageDialog').style.display = 'block';
    }

    function closeImageDialog() {
        document.getElementById('imageDialog').style.display = 'none';
    }

    function uploadImage(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const img = new Image();
                img.src = e.target.result;
                img.onload = function () {
                    const width = img.naturalWidth;
                    const height = img.naturalHeight;

                    if (width && height) {
                        document.execCommand('insertImage', false, e.target.result);
                        closeImageDialog();
                    } else {
                        alert('Error uploading image');
                    }
                };
            };
            reader.readAsDataURL(file);
        }
    }

    function insertImageFromUrl() {
        const url = document.getElementById('imageUrl').value;
        if (url) {
            document.execCommand('insertImage', false, url);
            closeImageDialog();
        }
    }

    function toggleEditorMode() {
        const editor = document.getElementById('editor');
        const htmlEditor = document.getElementById('htmlEditor');

        if (editor.style.display === 'none') {
            editor.style.display = 'block';
            htmlEditor.style.display = 'none';
            editor.innerHTML = htmlEditor.value;
        } else {
            editor.style.display = 'none';
            htmlEditor.style.display = 'block';
            htmlEditor.value = editor.innerHTML;
        }
    }
</script>