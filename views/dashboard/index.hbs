{{>headers/dashboard/dashboard_header}}

<!-- Spacing -->
<style>
    .mobile-view {
        height: 75px;
    }
</style>

<div class="mobile-view"></div>

<!-- Dashboard Graph Metrics -->
<div class="graphContainer">
    <div class="graph">
        <canvas id="articleViewsChart"></canvas>
    </div>
    <div class="graph" style="margin-top: 20px;">
        <canvas id="topReachedArticlesChart"></canvas>
    </div>
    <div class="graph" style="margin-top: 20px;">
        <canvas id="countryViewsChart"></canvas>
    </div>
    <div class="graph" style="margin-top: 20px;">
        <canvas id="impressionsChart"></canvas>
    </div>
</div>

<!-- New Article Button -->
<div class="newArticle">
    <div class="articleButton">
        <a href="/dashboard/article/new">
            <button>
                <svg viewBox="0 0 24 24" preserveAspectRatio="xMidYMid meet" focusable="false"
                    class="style-scope tp-yt-iron-icon"
                    style="pointer-events: none; display: block; width: 28px; height: 28px;">
                    <g width="24" height="24" viewBox="0 0 24 24" class="style-scope tp-yt-iron-icon">
                        <path
                            d="M14.06 7.6L16.4 9.94L6.34 20H4V17.66L14.06 7.6ZM14.06 6.19L3 17.25V21H6.75L17.81 9.94L14.06 6.19ZM17.61 4.05L19.98 6.42L18.84 7.56L16.47 5.19L17.61 4.05ZM17.61 2.63L15.06 5.18L18.85 8.97001L21.4 6.42L17.61 2.63Z"
                            class="style-scope tp-yt-iron-icon"></path>
                    </g>
                </svg>
            </button>
        </a>
    </div>
</div>

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Chart Data and Configuration -->
<script>
    document.addEventListener('DOMContentLoaded', async (event) => {
        try {
            // Fetch article data from the backend
            const response = await fetch('/articles/analytics');
            const result = await response.json();

            if (!result.success) {
                throw new Error(result.message);
            }

            const { articleViewsData, mostViewedArticle, mostImpressionsArticle, countryViews, mostVisitingCountry } = result.data;

            // Prepare data for Article Views Chart
            const articleViewsLabels = articleViewsData.map(article => new Date(article.created_time).toLocaleDateString());
            const articleViewsDataPoints = articleViewsData.map(article => article.views);

            // Article Views Chart
            const ctx1 = document.getElementById('articleViewsChart').getContext('2d');
            new Chart(ctx1, {
                type: 'line',
                data: {
                    labels: articleViewsLabels,
                    datasets: [{
                        label: 'Article Views',
                        data: articleViewsDataPoints,
                        backgroundColor: 'rgba(0, 120, 232, 0.2)',
                        borderColor: 'rgba(0, 120, 232, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    const article = articleViewsData[tooltipItem.dataIndex];
                                    return `${article.title}: ${tooltipItem.raw} views`;
                                }
                            }
                        }
                    }
                }
            });

            // Prepare data for Top Reached Articles Chart
            const topReachedArticlesLabels = articleViewsData.map(article => article.title);
            const topReachedArticlesDataPoints = articleViewsData.map(article => article.views);

            // Top Reached Articles Chart
            const ctx2 = document.getElementById('topReachedArticlesChart').getContext('2d');
            new Chart(ctx2, {
                type: 'bar',
                data: {
                    labels: topReachedArticlesLabels,
                    datasets: [{
                        label: 'Views',
                        data: topReachedArticlesDataPoints,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                title: function (tooltipItem) {
                                    return articleViewsData[tooltipItem[0].dataIndex].title;
                                },
                                label: function (tooltipItem) {
                                    return `Views: ${tooltipItem.raw}`;
                                }
                            }
                        }
                    }
                }
            });

            // Prepare data for Country Views Chart
            const countryViewsLabels = Object.keys(countryViews);
            const countryViewsDataPoints = Object.values(countryViews);

            // Country Views Chart
            const ctx3 = document.getElementById('countryViewsChart').getContext('2d');
            new Chart(ctx3, {
                type: 'pie',
                data: {
                    labels: countryViewsLabels,
                    datasets: [{
                        label: 'Country Views',
                        data: countryViewsDataPoints,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 205, 86, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255, 205, 86, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return `${tooltipItem.label}: ${tooltipItem.raw} views`;
                                }
                            }
                        }
                    }
                }
            });

            // Prepare data for Impressions Chart
            const impressionsLabels = articleViewsData.map(article => article.title);
            const impressionsDataPoints = articleViewsData.map(article => article.impressions);

            // Impressions Chart
            const ctx4 = document.getElementById('impressionsChart').getContext('2d');
            new Chart(ctx4, {
                type: 'bar',
                data: {
                    labels: impressionsLabels,
                    datasets: [{
                        label: 'Impressions',
                        data: impressionsDataPoints,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return `${tooltipItem.label}: ${tooltipItem.raw} impressions`;
                                }
                            }
                        }
                    }
                }
            });
        } catch (error) {
            console.error('Error loading article data:', error);
        }
    });
</script>

<style>
    /* Add to your style.css or dashboard.css */

    .graphContainer {
        width: 100%;
        margin-top: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .graph {
        width: 100%;
        height: 400px;
        margin-bottom: 20px;
    }
</style>